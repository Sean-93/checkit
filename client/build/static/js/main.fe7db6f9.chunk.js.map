{"version":3,"sources":["react-auth0-spa.js","utils/API.js","components/post.js","components/Navbar.js","components/Wrapper/index.js","components/CheckitCard/index.js","components/Grid/index.js","components/Profile.js","utils/history.js","components/PrivateRoute.js","views/ExternalApi.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","log","axios","get","checkitData","post","Post","show","setShow","formObject","setFormObject","handleInputChange","event","target","name","handleClose","Nav","Link","onClick","style","fontSize","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","required","onChange","url","type","placeholder","comment","as","rows","Footer","Button","variant","API","username","email","comments","then","res","catch","err","props","Container","marginTop","LineHeight","width","padding","borderRadius","backgroundColor","textAlign","color","textShadow","fontWeight","Row","Col","size","block","Navbar","marginBottom","height","boxShadow","expand","bg","to","component","Wrapper","className","CheckitCard","date","created","Fdate","Date","toLocaleString","Card","Text","href","rel","incrementCount","id","useful","interesting","unusual","fluid","Checkits","checkits","setCheckits","loadCheckits","data","key","catType","filter","checkit","_id","filtered","checkItToUpdate","totalVotes","put","length","map","createBrowserHistory","PrivateRoute","Component","path","rest","targetUrl","fn","render","ExternalApi","showResult","setShowResult","apiMessage","setApiMessage","callApi","token","fetch","headers","Authorization","response","json","responseData","JSON","stringify","App","Profile","Boolean","hostname","match","ReactDOM","domain","config","client_id","clientId","redirect_uri","origin","audience","push","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fe7db6f9.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (\n        window.location.search.includes(\"code=\") &&\n        window.location.search.includes(\"state=\")\n      ) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p),\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import axios from \"axios\";\nconst BASEURL = \"https://opengraph.io/api/1.1/site/\";\nconst APIKEY = \"app_id=87a00c1f-4c85-4aa7-b173-0ea5ce0624de\";\n\nexport default {\n  // Gets all Checkit postings\n  getCheckits: function() {\n    console.log(\"API getCheckits\");\n    return axios.get(\"/api/checkit\");\n  },\n  // Gets the Checkit post with the given id\n  getCheckit: function(id) {\n    return axios.get(\"/api/checkit/\" + id);\n  },\n    // Updates the Checkit with the given id\n  updateCheckit: function(id, record) {\n      return axios.put(\"/api/checkit/\" + id);\n  },\n  // Saves a Checkit post to the database\n  saveCheckit: function(checkitData) {\n    return axios.post(\"/api/checkit/create\", checkitData);\n  }\n    // Deletes the post with the given id\n//   deleteBook: function(id) {\n//     return axios.delete(\"/api/books/\" + id);\n//   }\n};\n","import React, { useState } from \"react\";\nimport \"./landingpage\";\nimport { Nav, Button, Modal, Form } from \"react-bootstrap\";\nimport API from \"../utils/API\";\nimport { Redirect } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\n\nfunction Post() {\n  const [show, setShow] = useState(false);\n  const [formObject, setFormObject] = useState({});\n  const [redirect, setRedirect] = useState(\"\");\n  \n  const { user } = useAuth0();\n  //user={user}\n  \n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value });\n  }\n  \n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    console.log(\"Post handleFormSubmit user\", user);\n    if (formObject.url && formObject.comment) {\n      API.saveCheckit({\n        username: user.name,\n        email: user.email,\n        url: formObject.url,\n        comments: formObject.comment,\n      })\n        .then((res) => console.log(\"result\"))\n        .catch((err) => console.log(err));\n    }\n  }\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const stylelink = {\n    fontSize: \"20px\",\n  };\n\n  return (\n    <>\n      <Nav.Link onClick={handleShow} style={stylelink}>\n        {\" \"}\n        PostIt\n      </Nav.Link>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Make a PostIt</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>Link:</Form.Label>\n              <Form.Control\n                required\n                onChange={handleInputChange}\n                value={formObject.url}\n                name=\"url\"\n                type=\"text\"\n                placeholder=\"Enter a Link\"\n              />\n              <br />\n              <Form.Label>Comment:</Form.Label>\n              <Form.Control\n                required\n                onChange={handleInputChange}\n                value={formObject.comment}\n                as=\"textarea\"\n                name=\"comment\"\n                rows=\"3\"\n                placeholder=\"Enter a Comment\"\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-primary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              handleFormSubmit();\n              handleClose();\n            }}\n          >\n            Post\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default Post;\n","import React from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Container, Row, Col, Button } from \"react-bootstrap\";\nimport Post from \"./post\";\n\nconst Header = (props) => {\n  console.log(\"props are here:\", props);\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  const navbarr = {\n    marginBottom: \"60px\",\n    height: \"80px\",\n    textShadow: \"3px 4px 4px #0575e6\",\n    boxShadow: \"10px 10px 10px 10px white\",\n  };\n  const stylelink = {\n    fontSize: \"20px\",\n  };\n  const styleform = {\n    marginTop: \"100px\",\n    LineHeight: \"5px\",\n    width: \"50%\",\n    padding: \"20px\",\n    borderRadius: \"10px\",\n    backgroundColor: \"rgba(254, 254, 254, 0.55)\",\n    textAlign: \"center\",\n  };\n\n  return (\n    <>\n      {!isAuthenticated && (\n        <>\n          <Container style={styleform}>\n            <h2 style={{ color: \"white\", textShadow: \"4px 3px 3px black\" }}>\n              What's CheckIt?\n            </h2>\n            <hr />\n            <p>\n              CheckIt is app that you are allowed to post any link that you\n              desire and see where it takes you. It is all fun and just makes\n              you surf new things on the web. The links are rated in three\n              different catergories:{\" \"}\n              <span style={{ color: \"green\", fontWeight: \"bold\" }}>USEFUL</span>\n              ,{\" \"}\n              <span style={{ color: \"dodgerBlue\", fontWeight: \"bold\" }}>\n                INTERESTING\n              </span>\n              , and{\" \"}\n              <span style={{ color: \"yellow\", fontWeight: \"bold\" }}>\n                UNUSUAL\n              </span>\n              . Come check it out!\n            </p>\n            <Row>\n              <Col>\n                <Button\n                  variant=\"outline-primary\"\n                  onClick={() => loginWithRedirect({})}\n                  size=\"lg\"\n                  block\n                >\n                  Login\n                </Button>\n              </Col>\n\n              <Col>\n                <Button\n                  variant=\"outline-primary\"\n                  onClick={() => loginWithRedirect({})}\n                  size=\"lg\"\n                  block\n                >\n                  Signup\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </>\n      )}\n      <Navbar style={navbarr} expand=\"lg\" variant=\"light\" bg=\"white\">\n          <Container>\n            {isAuthenticated && (\n              <>\n                <Link onClick={() => logout()} style={stylelink}>\n                  Log out\n                </Link>\n              </>\n            )}\n\n            {isAuthenticated && (\n              <>\n                <Link\n                  to=\"/profile\"\n                  style={{ fontSize: \"60px\", color: \"#00f260\" }}\n                >\n                  CheckIt\n                </Link>\n                <Link component={Post}>PostIt</Link>\n                <Link to=\"/external-api\" />\n              </>\n            )}\n          </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport Button from \"react-bootstrap/Button\";\n// import Dropdown from 'react-bootstrap/Dropdown';\n//import CardDeck from 'react-bootstrap/CardDeck';\nimport Card from \"react-bootstrap/Card\";\n\nfunction CheckitCard(props) {\n  console.log(props);\n  var date = props.created,\n  Fdate = (new Date(date)).toLocaleString();\n  return (\n    <Card>  \n      {/* <Card.Img variant=\"top\" src=\"http://placehold.it/250x150\" /> */}\n      <Card.Body>\n        {/* <Card.Title>What to call it?</Card.Title> */}\n        <Card.Text>\n          <p>{Fdate}</p>\n          <p>\n            <strong>Submitted by:</strong> {props.username}\n          </p>\n          <p>\n            <strong>Comments:</strong> {props.comments}\n          </p>\n        </Card.Text>\n        <Card.Link href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {props.url}\n        </Card.Link>\n      </Card.Body>\n      <Card.Footer>\n        <Row>\n          <Col>\n            <Button\n              variant=\"outline-success\"\n              size=\"sm\"\n              onClick={() => props.incrementCount(props.id, \"use\")}\n            >\n              Useful\n            </Button>{\" \"}\n            <span>{props.useful}</span>\n          </Col>\n          <Col>\n            <Button\n              variant=\"outline-primary\"\n              size=\"sm\"\n              onClick={() => props.incrementCount(props.id, \"int\")}\n            >\n              Interesting\n            </Button>{\" \"}\n            <span>{props.interesting}</span>\n          </Col>\n          <Col>\n            <Button\n              variant=\"outline-warning\"\n              size=\"sm\"\n              onClick={() => props.incrementCount(props.id, \"unu\")}\n            >\n              Unusual\n            </Button>{\" \"}\n            <span>{props.unusual}</span>\n          </Col>{\" \"}\n        </Row>\n      </Card.Footer>{\" \"}\n    </Card>\n  );\n}\n\nexport default CheckitCard;\n\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  \n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Wrapper from \"../components/Wrapper\";\n//import CardDeck from 'react-bootstrap/CardDeck';\nimport CheckitCard from \"../components/CheckitCard\";\nimport API from \"../utils/API\";\nimport { Container } from \"../components/Grid\";\n\nfunction Checkits() {\n  // Setting our component's initial state\n  const [checkits, setCheckits] = useState([]);\n\n  // Load all Checkit posts and store them with setCheckits\n  useEffect(() => {\n    loadCheckits();\n  }, []);\n\n  // Loads all Checkit posts and sets them to checkits\n  function loadCheckits() {\n    console.log(\"loadCheckits\");\n    API.getCheckits()\n      .then((res) => setCheckits(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  const incrementCount = async (key, catType) => {\n    console.log(\"key=\", key, \" type=\", catType);\n\n    const filtered = await checkits.filter((checkit) => {\n      if (checkit._id === key) return checkit;\n    });\n\n    const checkItToUpdate = filtered[0];\n    console.log(checkItToUpdate);\n    switch (catType) {\n      case \"use\":\n        checkItToUpdate.useful += 1;\n        checkItToUpdate.totalVotes += 1;\n        break;\n      case \"int\":\n        checkItToUpdate.interesting += 1;\n        checkItToUpdate.totalVotes += 1;\n        break;\n      case \"unu\":\n        checkItToUpdate.unusual += 1;\n        checkItToUpdate.totalVotes += 1;\n        break;\n      default:\n    }\n\n    axios\n      .put(`/api/checkit/${key}`, {\n        totalVotes: checkItToUpdate.totalVotes,\n        useful: checkItToUpdate.useful,\n        interesting: checkItToUpdate.interesting,\n        unusual: checkItToUpdate.unusual,\n      })\n      .then((res) => {\n        console.log(res);\n        loadCheckits();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      <Container fluid>\n        {checkits.length ? (\n          <Wrapper>\n            {checkits.map((checkit) => (\n              <CheckitCard\n                key={checkit._id}\n                id={checkit._id}\n                incrementCount={incrementCount}\n                username={checkit.username}\n                created={checkit.created}\n                comments={checkit.comments}\n                url={checkit.url}\n                useful={checkit.useful}\n                interesting={checkit.interesting}\n                unusual={checkit.unusual}\n              >\n                {/* <DeleteBtn onClick={() => deleteBook(book._id)} /> */}\n              </CheckitCard>\n            ))}\n          </Wrapper>\n        ) : (\n          <h3>No Results to Display</h3>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default Checkits;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","// src/components/PrivateRoute.js\n\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: {targetUrl: window.location.pathname}\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;","// src/views/ExternalApi.js\n\nimport React, { useState } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst ExternalApi = () => {\n  const [showResult, setShowResult] = useState(false);\n  const [apiMessage, setApiMessage] = useState(\"\");\n  const { getTokenSilently } = useAuth0();\n\n  const callApi = async () => {\n    try {\n      const token = await getTokenSilently();\n\n      const response = await fetch(\"/api/external\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      const responseData = await response.json();\n\n      setShowResult(true);\n      setApiMessage(responseData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <h1>External API</h1>\n      <button onClick={callApi}>Ping API</button>\n      {showResult && <code>{JSON.stringify(apiMessage, null, 2)}</code>}\n    </>\n  );\n};\n\nexport default ExternalApi;","\nimport React from \"react\";\nimport NavBar from \"./components/Navbar\";\n\n// New - import the React Router components, and the Profile page component\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\nimport history from \"./utils/history\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport ExternalApi from \"./views/ExternalApi\";\nimport \"./App.css\"\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <header>\n          <NavBar />\n        </header>\n        <Switch>\n          <PrivateRoute path={[\"/\", \"/profile\"]} component={Profile} />\n          <PrivateRoute path=\"/external-api\" component={ExternalApi} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    audience={config.audience}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}